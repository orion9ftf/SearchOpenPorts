-- ################ CLASE 4 - indices: ################ --
-- Bases de datos estructuradas N2-P2-C1  termino de la primera unidad--

-- en caso de no estar el create view
GRANT CONNECT, RESOURCE, CREATE VIEW, CREATE SEQUENCE, 
DROP ANY VIEW, DROP ANY SEQUENCE
TO USUARIO_V_N2_P2_C1;

-- DESCONECTAR Y CONECTAR PARA QUE TOME LA NUEVA CONFIGURACION
-- considerando las tablas ya creadas:
SELECT * FROM TAB;
DESC PERSONAS;
DESC PAISES;
DESC REGIONES;

SELECT * FROM PAISES;
SELECT * FROM REGIONES;
SELECT * FROM USER_CONSTRAINTS;

-- RESTRICCION PARA REGIONES
ALTER TABLE REGIONES
ADD CONSTRAINT CHK_NOMBRE CHECK(LENGTH(NOMBRE) >= 3);

-- RESTRICCION PARA PAISES
ALTER TABLE PAISES
ADD CONSTRAINT CHK_NOMBRE_PAIS CHECK(LENGTH(NOMBRE) >= 3);

-- TAMBIEN PARA EL NOMBRE DE LA CAPITAL EN LA TABLA REGIONES:
ALTER TABLE REGIONES
ADD CONSTRAINT CHK_NOMBRE_CAPITAL CHECK(LENGTH(NOMBRE_CAPITAL) >= 3);

-- RESTRICCION PARA QUE LA POBLACION SEA MAYOR A CERO:
ALTER TABLE REGIONES
ADD CONSTRAINT CHK_POBLACION_REGION CHECK(POBLACION > 0);

-- CREAR SECUENCIA:
CREATE SEQUENCE SQ_PAISES
MINVALUE 1
MAXVALUE 900
START WITH 4; -- YA QUE TENEMOS 4 PAISES INGRESADOS EN LA DB - SINO PARTIRIA DE 1

-- incrementar el valor a la secuencia:
ALTER SEQUENCE SQ_PAISES INCREMENT BY 1;
-- ELIMINAR SECUENCIA:
DROP SEQUENCE SQ_PAISES;

-- SECUENCIA PARA REGIONES:
CREATE SEQUENCE SQ_REGIONES START WITH 1;

-- Consultas a la nada con DUAL:
SELECT SQ_REGIONES.CURRVAL FROM DUAL;
SELECT SQ_PAISES.CURRVAL FROM DUAL;

INSERT INTO PAISES VALUES(SQ_PAISES.NEXTVAL,'ESPAÑA');
INSERT INTO PAISES VALUES(SQ_PAISES.NEXTVAL,'CANADA');
INSERT INTO PAISES VALUES(SQ_PAISES.NEXTVAL,'COLOMBIA');

-- SI NO FUNCIONA EL NEXTVAL EJECUTAR: ROLLBACK
SELECT * FROM PAISES;

SELECT SQ_PAISES.NEXTVAL FROM DUAL;
SELECT * FROM PAISES;

-- vistas (las persona ingresada debe tener una region ingresada en sus datos, 
--para que esta consulta funcione):
SELECT PER.RUT RUT_PERSONA, PER.PRIMER_NOMBRE||' '||PER.PRIMER_APELLIDO NOMBRE_PERSONA,
  P.NOMBRE NOMBRE_PAIS, R.NOMBRE NOMBRE_REGION, PER.CORREO_ELECTRONICO, PER.DIRECCION
FROM PAISES P JOIN REGIONES R ON P.ID_PAIS = R.PAIS
  JOIN PERSONAS PER ON R.ID_REGION = PER.REGION;

-- INSERTAR VARIOS USUARIOS, QUE CONTENGAN TODOS LOS CAMPOS:
INSERT INTO PERSONAS VALUES('1234532-3', 'Donatela', 'Anita','Fuentes','Garrido','21-02-1990', 'Av. Dos Alamos 2312',3,'dona@iguiente.com');

INSERT INTO PERSONAS VALUES('1453456-9', 'Alvin', 'Calvin','Lira','Perez','11-10-1980', 'Av. Dos Alamos 2312',2,'al.lira@mail.com');

-- ahora con más datos en la tabla Personas, podemos crear la vista:
CREATE VIEW V_DATOS AS
SELECT PER.RUT RUT_PERSONA, PER.PRIMER_NOMBRE||' '||PER.PRIMER_APELLIDO NOMBRE_PERSONA,
  P.NOMBRE NOMBRE_PAIS, R.NOMBRE NOMBRE_REGION, PER.CORREO_ELECTRONICO, PER.DIRECCION
FROM PAISES P JOIN REGIONES R ON P.ID_PAIS = R.PAIS
  JOIN PERSONAS PER ON R.ID_REGION = PER.REGION
WITH READ ONLY;

SELECT * FROM V_DATOS;

-- ACTUALIZAR DATOS, solo si la persona se encuentra dentro de la lista
UPDATE V_DATOS
SET CORREO_ELECTRONICO = 'Metropolitana'
WHERE CORREO_ELECTRONICO = 'al.lira@mail.com';

-- no se pueden actualizar datos desde la vista, ya que solo
-- actua como consulta.

SELECT V.NOMBRE_REGION, R.ID_REGION
FROM REGIONES R JOIN V_DATOS V ON R.NOMBRE = V.NOMBRE_REGION;



-- ayudantia:
SELECT * FROM EMPLOYEES;
UPDATE EMPLOYEES SET SALARY = 5000; -- SE DEBE PASAR UN WHERE
COMMIT; -- ESTO ALMACENA LO ANTERIOR

-- CONSULTA:
SELECT E.FIRST_NAME||' '||E.LAST_NAME
  NOMBRE_COMPLETO, E.SALARY SALARIO,
  D.DEPARTMENT_NAME DEPARTAMENTO
FROM EMPLOYEES E JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTAMENT_ID;

-- CREAR VISTA: esto significa que se generará otra tabla para unir varias
CREATE VIEW JUANITO AS SELECT E.FIRST_NAME||' '||E.LAST_NAME
  NOMBRE_COMPLETO, E.SALARY SALARIO,
  D.DEPARTMENT_NAME DEPARTAMENTO
FROM EMPLOYEES E JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTAMENT_ID,
WITH READ ONLY;

-- MOSTRAR EL NOMBRE COMPLETO:
SELECT NOMBRE_COMPLETO FROM JUANITO;
SELECT * FROM JUANITO;
SELECT * FROM TAB;

-- CREAR O REEMPLAZAR UNA VISTA:
CREATE OR REPLACE VIEW JUANITO AS SELECT E.FIRST_NAME||' '||E.LAST_NAME
  NOMBRE_COMPLETO, E.SALARY SALARIO,
  D.DEPARTMENT_NAME DEPARTAMENTO
FROM EMPLOYEES E JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTAMENT_ID
WITH READ ONLY;

